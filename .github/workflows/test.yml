# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true

      - run: go generate ./...

      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.0.*'
          - '1.1.*'
          - '1.2.*'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false

      - name: Build terraform-provider-vyos
        run: go mod download

      - name: Start VyOS
        run: |
          docker run -d --privileged \
            --name vyos \
            -v ${{ github.workspace }}/.ci/vyos/config.boot:/opt/vyatta/etc/config.boot.default \
            -v ${{ github.workspace }}/.ci/vyos/selfsigned.pem:/etc/ssl/certs/ssl-cert-snakeoil.pem \
            -v ${{ github.workspace }}/.ci/vyos/selfsigned.key:/etc/ssl/private/ssl-cert-snakeoil.key \
            -v /lib/modules:/lib/modules \
            -p 443:443 \
            --tmpfs /config \
            foltik/vyos:rolling-latest \
            /sbin/init

      - name: Wait for VyOS
        run: timeout 120 bash ${{ github.workspace }}/.github/workflows/wait-for-vyos.sh

      - env:
          TF_ACC: "1"
          VYOS_ENDPOINT: https://localhost
          VYOS_API_KEY: vyos
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10
